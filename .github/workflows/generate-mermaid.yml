name: Generate Mermaid Diagram

on:
  workflow_call:
    inputs:
      requirements_status:
        description: "Status for Requirements and Use Cases"
        required: true
        type: string
        default: "pending"
      architecture_status:
        description: "Status for Architecture and Design"
        required: true
        type: string
        default: "pending"
      testplans_status:
        description: "Status for Test Plans"
        required: true
        type: string
        default: "pending"
      code_status:
        description: "Status for Code"
        required: true
        type: string
        default: "pending"
      results_status:
        description: "Status for Tests and Test Results"
        required: true
        type: string
        default: "pending"
      feedback_status:
        description: "Status for Feedback from the Field"
        required: true
        type: string
        default: "pending"
      operations_status:
        description: "Status for Security Operations"
        required: true
        type: string
        default: "pending"
  workflow_dispatch:
    inputs:
      requirements_status:
        description: "Status for Requirements and Use Cases"
        required: true
        type: string
        default: "success"
      architecture_status:
        description: "Status for Architecture and Design"
        required: true
        type: string
        default: "success"
      testplans_status:
        description: "Status for Test Plans"
        required: true
        type: string
        default: "success"
      code_status:
        description: "Status for Code"
        required: true
        type: string
        default: "success"
      results_status:
        description: "Status for Tests and Test Results"
        required: true
        type: string
        default: "pending"
      feedback_status:
        description: "Status for Feedback from the Field"
        required: true
        type: string
        default: "pending"
      operations_status:
        description: "Status for Security Operations"
        required: true
        type: string
        default: "pending"
permissions:
  contents: write
jobs:
  generate-diagram:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Mermaid Diagram
        run: |
          # Opret Mermaid diagram koden
          DIAGRAM="graph TD
          A[Requirements and Use Cases]:::${{ inputs.requirements_status }} -->|Abuse Cases<br>Security Requirements| B[Architecture and Design]:::${{ inputs.architecture_status }}
          B -->|Risk Analysis| C[Test Plans]:::${{ inputs.testplans_status }}
          C -->|Risk-based Security Tests| D[Code]:::${{ inputs.code_status }}
          D -->|Code Review| E[Tests and Test Results]:::${{ inputs.results_status }}
          E -->|Risk Analysis| F[Feedback from the Field]:::${{ inputs.feedback_status }}
          F -->|Penetration Testing| G[Security Operations]:::${{ inputs.operations_status }}
          
          classDef success fill:#9ff089,stroke:#237804,stroke-width:2px,rx:10px,ry:10px;
          classDef error fill:#ff7b7b,stroke:#8c0000,stroke-width:2px,rx:10px,ry:10px;
          classDef pending fill:#ffdb6d,stroke:#b59b01,stroke-width:2px,rx:10px,ry:10px;"
          
          # Konverter til base64
          ENCODED_DIAGRAM=$(echo "$DIAGRAM" | base64 -w 0)
          
          # Hent SVG fra mermaid.ink
          curl -s "https://mermaid.ink/svg/$ENCODED_DIAGRAM" -o diagram.svg
          
          # Hent også PNG versionen
          curl -s "https://mermaid.ink/img/$ENCODED_DIAGRAM" -o diagram.png
          
          # Opret også Markdown-fil til visning
          echo "# Software Security Touchpoints Status
          
          ![Software Security Touchpoints Status](diagram.svg)
          
          *Diagram automatisk genereret baseret på status fra CI/CD pipeline.*" > security-touchpoints.md

      - name: Commit diagram to repository
        run: |
          # Opret docs mappe hvis den ikke eksisterer
          mkdir -p docs/images
          
          # Kopier diagrammer til docs mappen
          cp diagram.svg docs/images/
          cp diagram.png docs/images/
          
          # Sæt git konfiguration
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
           
          # Tilføj, commit og push
          git add docs/images/diagram.svg docs/images/diagram.png
          git commit -m "Opdateret software security status diagram"
          git push